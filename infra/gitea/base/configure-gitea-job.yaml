apiVersion: batch/v1
kind: Job
metadata:
  name: configure-gitea
  namespace: gitea
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/ansible-automation-platform-21/ee-supported-rhel8:1.0
          env:
          - name: sub_domain
            value: ${SUB_DOMAIN}
          - name: branch
            value: main
          - name: password
            value: openshift
          - name: users
            value: " ${USERS} "
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash

              # Give gitea time to get up and running and minimize Job backoff from failures
              sleep 60
              until curl --output /dev/null --silent --head --fail http://gitea.gitea.svc:3000; do
                  printf 'Waiting for gitea to be available'
                  sleep 10
              done

              API_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              API_SERVER=https://kubernetes.default.svc

              echo "Setup temporary OCP user to make ansible happy"

              echo "tempuser:x:$(id -u):$(id -g):,,,:${HOME}:/bin/bash" >> /etc/passwd
              echo "tempuser:x:$(id -G | cut -d' ' -f 2)" >> /etc/group

              oc login --insecure-skip-tls-verify --token=$API_TOKEN $API_SERVER

              git clone https://github.com/AdvancedDevSecOpsWorkshop/gitea
              cd gitea
              git checkout ${branch}

              ansible-playbook main.yaml -e password=$password -e sub_domain=$sub_domain -e users=$(echo $users | xargs)
          name: configure-gitea
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          env:
          - name: sub_domain
            value: ${SUB_DOMAIN}
          - name: branch
            value: main
          - name: password
            value: openshift
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash

              until curl --output /dev/null --silent --head --fail http://gitea.gitea.svc:3000; do
                  printf 'Waiting for gitea to be available'
                  sleep 10
              done

              API_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              API_SERVER=https://kubernetes.default.svc

              oc login --insecure-skip-tls-verify --token=$API_TOKEN $API_SERVER

              # Double check deployment is ready
              oc rollout status deploy/postgresql-gitea

              # Check if authenticator has already been added
              KEYCLOAK_ROW=$(oc rsh deploy/postgresql-gitea psql -d giteadb -c "SELECT * FROM login_source WHERE id=1")

              if [[ $KEYCLOAK_ROW != *"Keycloak"* ]]; then
                # Insert row into Gitea database for Keycloak authentication"
                echo "Inserting Keycloak Authenticator into Gitea Database"
                oc rsh deploy/postgresql-gitea \
                  psql -d giteadb -c "INSERT INTO login_source (id,type,name,is_active,is_sync_enabled,cfg) VALUES (1,6,'Keycloak','t','t', '{\"Provider\":\"openidConnect\",\"ClientID\":\"gitea\",\"ClientSecret\":\"c7eae76c-bd26-4588-90b5-fa7a7520fb6b\",\"OpenIDConnectAutoDiscoveryURL\":\"https://keycloak.${sub_domain}/realms/openshift/.well-known/openid-configuration\",\"CustomURLMapping\":null,\"IconURL\":\"https://upload.wikimedia.org/wikipedia/commons/2/29/Keycloak_Logo.png\",\"Scopes\":null,\"RequiredClaimName\":\"\",\"RequiredClaimValue\":\"\",\"GroupClaimName\":\"groups\",\"AdminGroup\":\"cluster-admins\",\"GroupTeamMap\":\"\",\"GroupTeamMapRemoval\":false,\"RestrictedGroup\":\"\"}'); COMMIT;"
              else
                echo "Keycloak Authenticator already exists"
              fi

          name: configure-gitea-auth
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      serviceAccount: automation
      serviceAccountName: automation
